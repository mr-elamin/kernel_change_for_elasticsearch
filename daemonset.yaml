apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sysctl-limits-settings-for-elasticsearch
  namespace: efk-stack
spec:
  selector:
    matchLabels:
      name: sysctl-limits-settings-for-elasticsearch
  template:
    metadata:
      labels:
        name: sysctl-limits-settings-for-elasticsearch
    spec:
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      containers:
      - name: sysctl-limits
        volumeMounts:
        - name: host-root
          mountPath: /host-root
        image: busybox
        command:
          - sh
          - -c
          - |
            # Define the line to check and add
            LINE="vm.max_map_count=262144"
            FILE="/host-root/etc/sysctl.conf"
            # Check if the line is already in the file
            if ! grep -qF "$LINE" "$FILE"; then
              # If the line is not found, append it to the file
              echo "$LINE" | tee -a "$FILE"
            else
              echo "The line '$LINE' is already present in $FILE"
            fi
            # Mount the host's /proc directory to allow sysctl -w to update the  kernel direclty in the host
            mount --bind /host-root/proc /proc
            sysctl -w vm.max_map_count=262144
            # Check if the directory exists
            if [ ! -d /host-root/etc/security ]; then
              # Create the directory
              mkdir -p /host-root/etc/security
            fi
            # Define the lines to check and add
            SOFT_LINE="* soft nofile 65536"
            HARD_LINE="* hard nofile 65536"
            FILE_LIMITS="/host-root/etc/security/limits.conf"
            # Ensure the file exists
            if [ ! -f "$FILE_LIMITS" ]; then
               touch "$FILE_LIMITS"
            fi          
            # Check if the soft line is already in the file
            if ! grep -qF "$SOFT_LINE" "$FILE_LIMITS"; then
              # If the soft line is not found, append it to the file
              echo "$SOFT_LINE" | tee -a "$FILE_LIMITS"
            else
              echo "The line '$SOFT_LINE' is already present in $FILE_LIMITS"
            fi
            # Check if the hard line is already in the file
            if ! grep -qF "$HARD_LINE" "$FILE_LIMITS"; then
              # If the hard line is not found, append it to the file
              echo "$HARD_LINE" | tee -a "$FILE_LIMITS"
            else
              echo "The line '$HARD_LINE' is already present in $FILE_LIMITS"
            fi
            while true; do sleep 3600; done
        securityContext:
          privileged: true
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: true
      hostNetwork: true
      hostPID: true
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
